# -*- mode:shell-script -*-

autoload -U colors && colors
autoload -Uz vcs_info
setopt prompt_subst

zstyle ':vcs_info:*' stagedstr '%F{28}*'
zstyle ':vcs_info:*' unstagedstr '%F{11}*'
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b%F{1}:%F{11}%r'
zstyle ':vcs_info:*' enable git

function git_ahead_behind {
  REFERENCE=$(git symbolic-ref HEAD 2> /dev/null) || return
  BRANCH=${REFERENCE#refs/heads/}

  gstatus=''
  ahead=$(git rev-list origin..HEAD 2> /dev/null | wc -l)
  behind=$(git rev-list HEAD..origin 2> /dev/null | wc -l)

  if [[ $ahead > 0 || $behind > 0 ]]; then
      gstatus=' %F{green}+'$ahead'%F{reset}/%F{red}-'$behind'%F{reset}'
  fi

  echo $gstatus
}

precmd () {
    if [[ -z $(git ls-files --other --exclude-standard 2> /dev/null) ]] {
        zstyle ':vcs_info:*' formats '%F{green}%b%c%u%F{blue}%F{reset}'
    } else {
        zstyle ':vcs_info:*' formats '%F{green}%b%c%u%F{red}*%F{blue}%F{reset}'
    }

    vcs_info

    # TODO - check for presence of /.dockerenv to indicate we're
    # inside a container.

    prompt_standard="%n@%{$fg[cyan]%}%m%{$reset_color%}:%t ? "

    rprompt_standard="%{$fg[cyan]%}%~%{$reset_color%}:(%l)"
    rprompt_git="%{$fg[cyan]%}%~%{$reset_color%}:(${vcs_info_msg_0_}$(git_ahead_behind)):(%l)"

    PROMPT=$prompt_standard
    RPROMPT='$(select_rprompt)'

    # Add which goenv is active. Generalizing this to any environment
    # manager (my home-rolled goenv, nvm, python virtualenv,
    # etc... would be nice)
    if [ "$GOENV" != "" ]; then
        RPROMPT="${RPROMPT}:%F{green}$GOENV%F{reset}"
    fi

    # Add background job count
    if [ $#jobstates -ne 0 ]; then
        RPROMPT="${RPROMPT}:%F{red}[%j]%F{reset}"
    fi
}

function select_rprompt {
    git branch >/dev/null 2>/dev/null && echo $rprompt_git && return
    echo $rprompt_standard
}
